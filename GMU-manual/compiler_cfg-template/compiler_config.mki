#### Compiler config template file for use with GnumakeUniproc v1.0
# ! Be sure to replace every occurrence of <angle-brackets> to be your
# actual content, or [ at least comment them out if some of them are
# not required] .

###############################################################################
#	Compiler and usage description here
###############################################################################
# This file supports ... compiler to be used with GnumakeUniproc. 
# .......


_THIS_COMPILER_ID := <compiler-id>
	# Please set this to your compiler-id, e.g., msvc .

ifneq ($(gmp_COMPILER_ID),$(_THIS_COMPILER_ID))
  $(error !You have set a gmp_COMPILER_ID other than "$(_THIS_COMPILER_ID)")
endif
gmp_G_COMPILER_ID_VER = $(gmp_COMPILER_ID)$(gmp_COMPILER_VER_$(_THIS_COMPILER_ID))


### sample:
#_sdtCompilerVer = $(filter sdt%,$(gmp_COMPILER_VER_armcpp))
#_IsUsingSDT = $(if $(_sdtCompilerVer),1,)

### sample:
#_msvc_vc60ver := $(filter vc60%,$(gmp_COMPILER_VER_msvc))
#_msvc_IsUsing_vc60 := $(if $(_msvc_vc60ver),1,)

### sample:
#_xxCompilerVers := $(strip $(_sdtCompilerVer) $(_msvc_vc60ver))

# Here, check whether gmp_COMPILER_VER_$(_THIS_COMPILER_ID) results in a non-empty but unrecognized compiler-ver.
ifneq (,$(gmp_COMPILER_VER_$(_THIS_COMPILER_ID)))
  ifeq (,$(_<xx>CompilerVers))
    $(warning !GMP!Warning: Your gmp_COMPILER_VER_$(_THIS_COMPILER_ID) has value "$(gmp_COMPILER_VER_$(_THIS_COMPILER_ID))", which contains no recognized version for <certain> compiler)
  endif
endif

ifeq (,$(strip $(_<xx>CompilerVers)))
  # set the default:
  _<xx>CompilerVerUse = #armrv
  #_IsUsingARMRV = 1
else
  ifneq (1,$(call _IsAllWordsSame,$(_<xx>CompilerVers)))
    $(error !GMP!Error: Multiple <certain> compiler versions are defined: gmp_COMPILER_VER_$(_THIS_COMPILER_ID)=$(gmp_COMPILER_VER_$(_THIS_COMPILER_ID)), _<xx>CompilerVers=$(_<xx>CompilerVers))
  endif
  _armCompilerVerUse = $(firstword $(_armCompilerVers))

  #[2008-08-14] gmp_G_CompilerVerToDeco must be defined for a compiler-config-mki if input
  #gmp_COMPILER_VER_armcpp matches one of the predefined compiler-ver strings.
  gmp_G_CompilerVerToDeco := _$(_<xx>CompilerVerUse)
  gmp_G_CompilerVerValid  :=  $(_<xx>CompilerVerUse)
endif



# Configure extension names for object/lib/exe files.
gmu_extn_OBJ = obj
gmp_extn_LIB = lib
gmp_extn_DLL = dll
gmp_extn_EXE = exe

### Configure command names for compiler, linker, archiver.
# Command to compile a C file
gmu_exe_CC = cl
# Command to compile a C++ file
gmu_exe_CXX = cl
# Command to assemble an assembler source
gmu_exe_ASM = masm
# Command to link an exe/dll
gmu_exe_LINK = link
# Command to generate a lib
gmu_exe_LIB = lib
### <<< The above names are not critical; they are only for displaying purpose. You can leave them null.

# Configure name construction rule for Lib/Exe/Dll
gmpf_MakeLibName = $(patsubst %,%.$(gmp_extn_LIB),$1)
gmpf_MakeExeName = $(patsubst %,%.$(gmp_extn_EXE),$1)
gmpf_MakeDllName = $1.$(gmp_extn_DLL) # cannot generate this type of image yet


# Define function gmpf_MakeUpSysLibsToLink.
# This tells how a
gmpf_MakeUpSysLibsToLink = <function>
# Examples:
#	gmpf_MakeUpSysLibsToLink = $(addsuffix .lib,$1) # For Windows
#	gmpf_MakeUpSysLibsToLink = $(addprefix -l,$1)   # For linux

gmu_u_GCC_M_OPTIONS += 


gmu_ud_list_SYS_HEADER +=
	# List system headers here, separated by spaces.


gmp_CFLAGS_NON_CODE_GEN +=
	# For those flags that will never affect the generated code. 
	# Example: MSVC's /nologo



##### Always include this bc_common.mki please!
include $(gmu_DIR_GNUMAKEUNIPROC)/$(_dirDefaultCompilerCfg)/bc_common.mki


################################################################################
# Define compiling options and linking options below.
# Consider these factors to assign appropriate options:
#	* whether gmp_bc_UNICODE or gmp_bc_DEBUG is defined
#	* different gmp_bc_IMAGE_TYPE assigned in user makefile
# Hint: 
#	If you were accustomed to assign compiler options in CFLAGS,
# now please assign them in gmp_CFLAGS_MACRO_DEFS_preset
# and gmp_CFLAGS_CODE_GEN_preset.
################################################################################

### Sample:
#                                  ........ gmp_bc_UNICODE ........
ifdef gmp_bc_UNICODE
  gmp_CFLAGS_MACRO_DEFS_preset += -DUNICODE -D_UNICODE
else # MBCS 
  gmp_CFLAGS_MACRO_DEFS_preset += -D_MBCS
endif

#^^^^^^^^ gmp_bc_UNICODE ^^^^^^^########........ gmp_bc_DEBUG .........

ifdef gmp_bc_DEBUG
	# for so-called debug-build

  gmp_CFLAGS_MACRO_DEFS_preset += 
	# For msvc:     -D_DEBUG
	# For linuxgcc: ?
  gmp_CFLAGS_CODE_GEN_preset += 
	# For msvc:     /Od /Zi
	# For linuxgcc: -g -O0

  gmp_LINKFLAGS_preset +=
	# For msvc:     /debug
	# For linuxgcc: -g
else
	# for so-called release-build

  gmp_CFLAGS_MACRO_DEFS_preset += 
	# For msvc:     /DNDEBG
	# For linuxgcc: ?

  gmp_CFLAGS_CODE_GEN_preset += 
	# For msvc:     /O2
	# For linuxgcc: -O2

  gmp_LINKFLAGS_preset +=

endif

#^^^^^^^ gmp_bc_DEBUG ^^^^^^^^^########....... gmp_bc_IMAGE_TYPE ........


# Some gmu-vars you may care when construction the compiling/linking command
# The text line after >> is real value of that gmu-var from the Example project walkdir_ex1 
# with gmp_COMPILER_ID=mingw.
#
# $@	Represent the target(the output LIB/DLL/EXE full path. The same as $(gmu_Gp_LINK_OUTPUT)
#		>> D:/GMU/GMU-examples/common/walkdir/examples/walkdir_ex1/exe.mingw/gf/walkdir_ex1_mingw/walkdir_ex1.exe
#
# $(gmu_Gd_Final_PrjOutput)	Project output dir.
#		>> D:/GMU/GMU-examples/common/walkdir/examples/walkdir_ex1/exe.mingw/gf/walkdir_ex1_mingw
#
# $(gmu_Gd_OBJ_OUTPUT)	Project object files output dir.
#		>> D:/GMU/GMU-examples/common/walkdir/examples/walkdir_ex1/exe.mingw/gf/walkdir_ex1_mingw/_obj
#
# $(gmu_Gd_PRJ_GMUTMP)	Temporary dir for current project.
#		In case you want to generate some intermediate files during the build, you can generate 
#		them there.
#		>> D:/GMU/GMU-examples/common/walkdir/examples/walkdir_ex1/exe.mingw/gf/walkdir_ex1_mingw/_gmu_tmp
#
# To get object filepath given a source filepath, use $(call gmuf_c_to_obj,foo.c)
#		>> $(call gmuf_c_to_obj,walkdir-exe.c)
#		>> returns
#		>> D:/GMU/GMU-examples/common/walkdir/examples/walkdir_ex1/exe.mingw/gf/walkdir_ex1_mingw/_obj/walkdir-exe.c.o 


# NOTE: The following "else ifeq ..." syntax only works since GNU make 3.81.
ifeq '$(gmp_bc_IMAGE_TYPE)' 'LIB'

  gmu_I_AM_A_LINK_COMPONENT = 1
  gmu_IS_SUBPRJ_AUTO_LINK_MERGE = 1
	# Always have above two lines here, please.

  gmi_SYDO_up_list_SYNC_LIB = $(gmu_Gp_LINK_OUTPUT)
	# This is for bundled plugin PI_sync_devoutput to sync LIB output. Leave it here.

  gmp_CFLAGS_CODE_GEN_preset +=
  gmp_CFLAGS_MACRO_DEFS_preset +=

  define gmu_u_LINK_CMD
	$(gmu_exe_LIB) --<OuTPuTFlaG>="$@" <other-options> $(gmp_ALL_TO_LINK_FOR_LIB)
	# For msvc:     	
	#	$(call _gmpf_cmd_write_objliblist,$(gmp_ALL_TO_LINK_FOR_LIB),$(_gmp_Gp_objliblist)) # write obj list to a file first
	#	$(gmu_exe_LIB) /nologo /out:"$@" @$(_gmp_Gp_objliblist)
	# For linuxgcc: 
	#	$(gmu_exe_LIB) -crs "$@" $(gmp_ALL_TO_LINK_FOR_LIB)
  endef

else ifeq '$(gmp_bc_IMAGE_TYPE)' 'DLL'

  gmu_I_AM_A_LINK_COMPONENT = 1

  gmi_SYDO_up_list_SYNC_DLL = $(gmu_Gp_LINK_OUTPUT)
	# This is for bundled plugin PI_sync_devoutput to sync DLL output. Leave it here.

  define gmu_u_LINK_CMD
	$(gmu_exe_LINK) --<OuTPuTFlaG>="$@" <other-options> $(_gmp_LINKFLAGS_final) $(gmp_ALL_TO_LINK)
  endef

else ifeq '$(gmp_bc_IMAGE_TYPE)' 'EXE'

  gmi_SYDO_up_list_SYNC_EXE = $(gmu_Gp_LINK_OUTPUT)
	# This is for bundled plugin PI_sync_devoutput to sync EXE output. Leave it here.

  define gmu_u_LINK_CMD
	$(gmu_exe_LINK) --<OuTPuTFlaG>="$@" <other-options> $(_gmp_LINKFLAGS_final) $(gmp_ALL_TO_LINK)
  endef

endif

#^^^^^^^^ gmp_bc_IMAGE_TYPE ^^^^^^^^

# ................................................

gmp_FLAGS_INCLUDES += $(addprefix -I ,$(gmu_ud_list_PRJ_HEADER)) # append include-directories 

gmu_u_CC_CMD =  $(gmu_exe_CC)  -c $(_gmp_CFLAGS_final) $(gmp_FLAGS_INCLUDES) -o "$@" $<
gmu_u_CXX_CMD = $(gmu_exe_CXX) -c $(_gmp_CFLAGS_final) $(gmp_FLAGS_INCLUDES) -o "$@" $<
gmu_u_ASM_CMD = $(gmu_exe_ASM) $(gmp_ASMFLAGS) -o "$@" $<

# ..... syslib categories, user should append some into gmp_bc_SYSLIBS (gmp_bc_SYSLIBS += gmp_bc_syslib_XXX).


# Define system libs here, and its value will become linker options(into $(gmp_ALL_TO_LINK))
gmp_bc_SYSLIBS +=
	# For msvc:     gmp_bc_SYSLIBS += $(call gmpf_MakeUpSysLibsToLink,kernel32 user32 gdi32 uuid)

#
#gmp_bc_syslib_GUI = user32 gdi32 comdlg32
#gmp_bc_syslib_WIN_SYS = winspool shell32 advapi32 ole32 oleaut32
#gmp_bc_syslib_DATABASE = odbc32 odbccp32
#gmp_bc_syslib_NETWORK = ws2_32
#

