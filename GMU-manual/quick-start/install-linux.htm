<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="STYLESHEET" type="text/css" href="chj.css">
<link rel="STYLESHEET" type="text/css" href="../chj.css">
<title>Installation for Linux User</title>
</head>

<body>
<H1 align="center">Installation for Linux User</H1>
<ul>
  <li><a href="#SoftwarePrerequisite">Software Prerequisite</a></li>
  <ul>
	  <li><a href="#GnumakeUniprocitself">GnumakeUniproc itself</a></li>
	  <li><a href="#GnumakeUniprocdepends">Software that GnumakeUniproc depends</a></li>
      <li><a href="#specprgs">Some special programs provided by GnumakeUniproc</a></li>
  </ul>
  <li><a href="#EnvVarSetup">Environment variable(env-var) setup</a></li>
</ul>
<p>Note: The following procedure has been tested on SUSE Linux 10.1 and 9.0, and other not-so-old Linux distributions should work as well. </p>
<p>You do not have to be root user to use GnumakeUniproc. But if you are root, you can install GnumakeUniproc for all users on that Linux machine. </p>
<H2><a name="SoftwarePrerequisite"></a>Software Prerequisite</H2>
<h3><a name="GnumakeUniprocitself"></a>GnumakeUniproc itself</h3>
<p>GnumakeUniproc itself can be placed anywhere, and a special environment(<code>gmu_DIR_ROOT</code>) variable will tell where it resides(<a href="#EnvVarSetup">described later</a>). Let's assume that all GnumakeUniproc files will be placed in <tt>~/GMU</tt> . </p>
<p>Currently, GnumakeUniproc is distributed in a package called GMU-xxx.tar.bz2 (xxx is the version number). I assume that you've extracted its content to ~ (your home dir), that is, there should exist a file named <tt>~/GMU/INSTALL.linux</tt> . To setup GnumakeUniproc's running environment, follow the instruction in <tt>INSTALL.linux</tt> (a text file). In the following words, I'll somehow reiterate some procedure described in <tt>INSTALL.linux</tt>. </p>
<h3><a name="GnumakeUniprocdepends"></a>Software that GnumakeUniproc depends </h3>
<p>The softwares described in this section(GNU make, bash, and gcc) are not provided in GMU-xxx.tar.bz2, so you have to make sure they have been pre-installed on your Linux system. </p>
<h4>GNUmake(GNU make) 3.80 or above</h4>
<p>If you do not have  GNUmake 3.80 or above on your system, please do a software upgrade.</p>
<p>AND NOTE: If you use make 3.80, you MUST start a GMU build process by executing <tt>umake</tt>, not just executing <tt>make</tt>. With make 3.81, you can just execute <tt>make</tt>, but using <tt>umake</tt> is recommended. (<a href="#make380or381">described in detail later</a>) </p>
<h4>Bash shell and some file utilities </h4>
<p>A shell is used when make executes a command for a rule or when <code>$(shell )</code> function is invoked. </p>
<p>For Bash, I myself have tried Bash 2.x on SUSE 9.0 and Bash 3.x on SUSE 10.1. </p>
<p>Bourne shell should be OK but I have not tried it on my own. I have not tried other shells(csh or ksh), I cannot tell whether the will work, and probably not, due to the discrepancy in backslash escaping scheme. </p>
<p>Shell utilities include mkdir, cp, rm, mv, cat etc. I do not use rarely-seen switches for these command, so I think it'll be just OK as long as those executables are present. </p>
<h4>gcc</h4>
<p>Well, I believe you won't miss this. We'll be using this compiler to build our C/C++ programs, and, to generate header file depenency for C/C++ source files(<code>gcc -M</code>). </p>
<p>I myself have tried gcc 3.3.1(on SUSE Linux 9.0) and gcc 4.1.0(on SUSE Linux 10.1).</p>
<h3><a name="specprgs"></a>Some special programs provided by GnumakeUniproc</h3>
<p>In order to acquire some special functionalitly required by GMU, some simple programs must be crafted. To build and install those programs, execute the <tt>install-exe.sh</tt> shell script in <tt>~/GMU/GMU-main</tt> , with an argument indicating where to copy those programs. We assume that you use <tt>~/GMU/bin</tt> : </p>
<pre class="fws">[chj @suse101 ~/GMU/GMU-main]
$ ./install-exe.sh ~/GMU/bin</pre>
<p>This shell script could output information like this: </p>
<pre class="fws">gcc -o /home/chj/GMU/bin/gmuAddActionWord gmu_programs/gmuAddActionWord/gmuAddActionWord.c
gcc -o /home/chj/GMU/bin/gmuCountChar gmu_programs/gmuCountChar/gmuCountChar.c
gcc -o /home/chj/GMU/bin/gmuExtractVarDefines gmu_programs/gmuExtractVarDefines/gmuExtractVarDefines.c
cp umake_cmd/bash/umake /home/chj/GMU/bin/umake
cp umake_cmd/bash/umakeD /home/chj/GMU/bin/umakeD
cp umake_cmd/bash/umakeU /home/chj/GMU/bin/umakeU
cp umake_cmd/bash/umakeUD /home/chj/GMU/bin/umakeUD
</pre>
<p>You can clearly know what has happened from that shell script. </p>
<ul>
  <li>If you are root, you may want to generate those gmu<i>XXX</i> programs into a publicly available location such as <tt>/usr/local/bin</tt>, so that no extra PATH setting is required.</li>
  <li>If you are just a normal user, you have to generate those programs within you home directory and add that directory to your PATH environment variable. </li>
</ul>
<h2><a name="EnvVarSetup"></a>Environment variable(env-var) setup </h2>
<p>You can do it with <tt>~/GMU/GMU-main/set-gmuenv.sc</tt> , in either way:</p>
<ol>
  <li>You can `source' it, passing GnumakeUniproc installation root directory <tt></tt> as parameter:</li>
  <pre class="fws">source ~/GMU/GMU-main/set-gmuenv.sc ~/GMU</pre>
  <li>You can cd to where it is and `source' it:</li>
  <pre class="fws">cd ~/GMU/GMU-main ; source set-gmuenv.sc</pre>
</ol>
<p>This <tt>set-gmuenv.sc</tt> sets environment variable <code>gmu_DIR_ROOT</code> to <tt>~/GMU</tt> and so on, which is required for GnumakeUniproc's running. </p>
<p>That's all of installation process on Linux. </p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</body>

</html>
