<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="STYLESHEET" type="text/css" href="chj.css">
<link rel="STYLESHEET" type="text/css" href="../chj.css">
<title>Installation for Linux User</title>
</head>

<body>
<H1 align="center">Installation for Linux User</H1>
<ul>
  <li><a href="#SoftwarePrerequisite">Software Prerequisite</a></li>
  <ul>
	  <li><a href="#GnumakeUniprocitself">GnumakeUniproc itself</a></li>
	  <li><a href="#GnumakeUniprocdepends">Software that GnumakeUniproc depends</a></li>
  </ul>
  <li><a href="#setup-gmu-self">Set up GnumakeUniproc itself</a></li>
  <ul>
      <li><a href="#specprgs">Some special programs provided by GnumakeUniproc</a></li>
  	  <li><a href="#EnvVarSetup">Environment variable(env-var) setup</a></li>
      <li><a href="#system-wide">Install GnumakeUniproc system-wide</a></li>
  </ul>
</ul>
<p>This article reiterates  procedures described in <tt>INSTALL.linux</tt> (a text file) to give you a more detailed understanding of the install process on Linux.</p>
<p>Note: The following procedure has been tested on SUSE Linux 9.0 and 10.1(with make 3.81), and other not-so-old Linux distributions should work as well. </p>
<p>You do not have to be root user to use GnumakeUniproc. But if you are root, you can install GnumakeUniproc for all users on that Linux machine. </p>
<H2><a name="SoftwarePrerequisite"></a>Software Prerequisite</H2>
<h3><a name="GnumakeUniprocitself"></a>GnumakeUniproc itself</h3>
<p>Currently, GnumakeUniproc is distributed in a package called GMU-xxx.tar.bz2 (xxx is the version number). To use it, you should first extract it somewhere, e.g., you extract its content to ~ (your home dir), </p>
<pre class="fws">$ cd ~
$ tar jxvf GMU-xxx.tar.bz2</pre>
<p>Don't be upset, there will be nothing tucked into your home directory except a  sub-directory named <tt>GMU</tt>. </p>
<p>To check the result, there should exist a file named <tt>~/GMU/INSTALL.linux</tt> . </p>
<h3><a name="GnumakeUniprocdepends"></a>Software that GnumakeUniproc depends </h3>
<p>The software described in this section(GNU make, bash, and gcc) are not provided in GMU-xxx.tar.bz2, so you have to make sure they have been pre-installed on your Linux system. </p>
<h4>GNUmake(GNU make) 3.80 or above</h4>
<p>If you do not have GNUmake 3.80 or above on your system, please do a software upgrade.</p>
<p>Using GNU make 3.81 is strongly recommended. We have experienced some bugs with GNU make 3.80 when dealing with something complicated makefiles.</p>
<h4>Bash shell and some file utilities </h4>
<p>A shell is used when <tt>make</tt> executes a command for a rule or when <code>$(shell )</code> function is invoked. </p>
<p>For Bash, I myself have tried Bash 2.x on SUSE 9.0, Bash 3.x on SUSE 10.1, and Bash 4.0 on Ubuntu 9.10. </p>
<p>Bourne shell should be OK but I have not tried it on my own. I have not tried other shells(csh or ksh), I cannot tell whether that will work, and probably not, due to the discrepancy in backslash escaping scheme. </p>
<p>Shell utilities include mkdir, cp, rm, mv, cat etc. I do not use rarely-seen switches for these command, so I think it'll be just OK as long as those executables are present. </p>
<h4>gcc</h4>
<p>Well, I believe you won't miss this. We'll be using this compiler to build our C/C++ programs, and, to generate header file dependency for C/C++ source files(<code>gcc -M</code>). </p>
<p>I myself have tried gcc 3.3.1(on SUSE Linux 9.0) and gcc 4.1.0(on SUSE Linux 10.1).</p>
<h2><a name="setup-gmu-self"></a>Set up GnumakeUniproc itself</h2>
<p>Briefly, two steps: install of some special programs, then set up some environment variables. </p>
<h3><a name="specprgs"></a>Some special programs provided by GnumakeUniproc</h3>
<p>In order to acquire some special functionality required by GMU, some simple programs must be crafted. To build and install those programs, execute the <tt>install-exe.sh</tt> shell script in <tt>~/GMU/GMU-main</tt> . </p>
<pre class="fws">[chj @suse101 ~]$ <b>~/GMU/GMU-main/install-exe.sh</b>
Info: You did not assign a directory as parameter, so "/home/chj/GMU/bin" will be used.
gcc -o /home/chj/GMU/bin/gmuAddActionWord /home/chj/GMU/GMU-main/gmu_programs/gmuAddActionWord/gmuAddActionWord.c
gcc -o /home/chj/GMU/bin/gmuCountChar /home/chj/GMU/GMU-main/gmu_programs/gmuCountChar/gmuCountChar.c
gcc -o /home/chj/GMU/bin/gmuExtractVarDefines /home/chj/GMU/GMU-main/gmu_programs/gmuExtractVarDefines/gmuExtractVarDefines.c
cp /home/chj/GMU/GMU-main/umake_cmd/bash/umake-share /home/chj/GMU/bin/umake-share
cp /home/chj/GMU/GMU-main/umake_cmd/bash/umake /home/chj/GMU/bin/umake
cp /home/chj/GMU/GMU-main/umake_cmd/bash/umakeD /home/chj/GMU/bin/umakeD
cp /home/chj/GMU/GMU-main/umake_cmd/bash/umakeU /home/chj/GMU/bin/umakeU
cp /home/chj/GMU/GMU-main/umake_cmd/bash/umakeUD /home/chj/GMU/bin/umakeUD
</pre>
<p>Tip: It does not matter what your working directory is when executing <tt>install-exe.sh</tt> . </p>
<p>You can see, that will create a <tt>bin</tt> directory alongside <tt>GMU-main</tt> and some files(executables) will be generated and placed there. </p>
<h3><a name="EnvVarSetup"></a>Environment variable(env-var) setup </h3>
<p>GnumakeUniproc needs some env-vars in order to work. You can set it up by executing shell command:</p>
<pre class="fws">source ~/GMU/GMU-main/set-gmuenv.sc</pre>
<p>This <tt>set-gmuenv.sc</tt> sets some environment variables required for GnumakeUniproc's running, such as </p>
<ul>
				<li><code>gmu_DIR_ROOT</code> to the full path of <tt>~/GMU</tt> and so on.</li>
                <li>Prepend <tt>~/GMU/bin</tt> to PATH.</li>
</ul>
<div class="hint">
				<p>NOTE for users prior to Bash 3.0: If your shell is Bash 2.x or prior, you must explicitly pass GMU root dir as a parameter, </p>
				<pre class="fws">source ~/GMU/GMU-main/set-gmuenv.sc ~/GMU </pre>
				<p>For Bash 3.0 and above, GMU root dir can be automatically deduced from <tt>set-gmuenv.sc</tt>'s location. </p>
</div>
<p>This will output something like:</p>
<pre class="fws">From set-gmuenv.sc: export env-var:
    gmu_DIR_ROOT=/home/chj/GMU
    gmu_DIR_GNUMAKEUNIPROC=/home/chj/GMU/GMU-main/GnumakeUniproc
Success! To see all gmu-vars set into env, type command:   set | grep -e "^gm[a-z]_"
</pre>
<p>Finally, you should know that env-vars set by <tt>set-gmuenv.sc</tt> will vanish after you quit your current login shell, therefore, it is suggested to source it in your <tt>.bashrc</tt> , so that it can be done automatically when you login your linux box. </p>
<p>That's all the installation process on Linux. Now, you can go on building our first example.</p>
<h3><a name="system-wide"></a>Install GnumakeUniproc system-wide </h3>
<p>If you are the system admin, and want to install GnumakeUniproc once so every user on the system can use it, you can do the above two steps in a different way. For example...</p>
<p>To install GnumakeUniproc main files to <tt>/usr/local/GMU</tt>, you do </p>
<pre class="fws">
cd /usr/local
sudo tar jxvf GMU-xxx.tar.bz2</pre>
<p>To install GnumakeUniproc special programs to <tt>/usr/local/bin</tt>, you do </p>
<pre class="fws">sudo /usr/local/GMU/GMU-main/install-exe.sh /usr/local/bin</pre>
<p>Finally(if you like), place <tt>source /usr/local/GMU/GMU-main/set-gmuenv.sc</tt> in a system-wide start-up script.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</body>

</html>
