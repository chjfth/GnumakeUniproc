
ifeq (,$(gmp_bc_IMAGE_TYPE))
  $(error `gmp_bc_IMAGE_TYPE' not defined. I cannot know what link command to use)
endif

_p_ExtraImageTypeMki = $(gmu_DIR_GNUMAKEUNIPROC)/$(gmp_COMPILER_ID)/extra_image_types/$(gmp_bc_IMAGE_TYPE).mki

_gmp_Gp_objliblist = $(gmu_Gd_Final_PrjOutput)/objlist.lst
_gmpf_cmd_write_objliblist = echo -e "$(subst $(_GmuSpace),\n,$1)" > $2
	# $1: what string to write. $2: what file to write to

_shcmd_showlibstolink = $(call _DoVerbose$1,\
	echo -n "**$3($2): "; \
	$(if $(strip $($2)),echo ''; for v in $(patsubst $(gmu_ud_OUTPUT_ROOT)/%,\%/%,$($2)); do echo "    $${v}"; done,echo "(none)")\
	)

define _gmpf_bcfShowLibrariesToLink
	@$(call _shcmd_showlibstolink,1,gmu_up_list_EXTRA_OBJ_TO_LINK,extra objs to link)
	@$(call _shcmd_showlibstolink,1,gmu_up_list_EXTRA_OBJ_TO_LINK_2,extra objs to link)
	@$(call _shcmd_showlibstolink,1,gmp_ud_list_EXTRALIB,library search directories)
	@$(call _shcmd_showlibstolink,1,gmu_Gp_list_SUBPRJ_TO_LINK,libraries to link from sub-projects)
	@$(call _shcmd_showlibstolink,1,gmp_bc_EXTRALIBS,libraries to link stand-alone)
	@$(call _shcmd_showlibstolink,2,gmp_bc_SYSLIBS,System libraries to link)
endef
bcfShowLibrariesToLink = $(_gmpf_bcfShowLibrariesToLink)
	# bcfShowLibrariesToLink is for backward compatibility, use of it is discouraged.

gmu_SHOW_LINKING_IMAGE_TYPE = $(gmp_bc_IMAGE_TYPE)

gmp_bc_EXTRALIBS += $(gmp_bc_EXTRALIBS2)
	#[2008-12-10] Appending $(gmp_bc_EXTRALIBS2) for pre-0.94 compatibility.


gmp_LINKFLAGS += $(c_flags_Link_Common)

_gmp_ALL_LIBS_TO_LINK = $(gmu_Gp_list_SUBPRJ_TO_LINK) $(gmp_bc_EXTRALIBS) $(gmp_bc_SYSLIBS)

gmp_ALL_TO_LINK = $(patsubst $(CURDIR)/%,./%,\
 $(gmu_up_list_EXTRA_OBJ_TO_LINK) $(gmu_Gp_list_REQOBJS)\
 $(if $(gmp_LINKER_NO_RECURSE_LIB_SEARCH),,$(gmp_LINKER_LIB_GROUP_START))\
  $(gmu_up_list_EXTRA_OBJ_TO_LINK_2) $(_gmp_ALL_LIBS_TO_LINK) \
 $(if $(gmp_LINKER_NO_RECURSE_LIB_SEARCH),,$(gmp_LINKER_LIB_GROUP_END)) )


gmp_ALL_TO_LINK_FOR_LIB = $(gmu_up_list_EXTRA_OBJ_TO_LINK) $(gmu_Gp_list_REQOBJS) $(gmu_up_list_EXTRA_OBJ_TO_LINK_2)
	# All those(obj files) to be linked in to a static lib file.


gmpf_CombinePsSubdirs = $(foreach v,$1,$(addprefix $v/,$2) $v)
	# $1: The parent dir
	# $2: The subdir(storing platform specific files) within the parent dir.

gmu_ud_list_PRJ_HEADER += $(call gmpf_CombinePsSubdirs,$(gmp_ud_list_PS_HEADER_PARENT),$(gmp_PS_INCLUDE_SUBDIRS))
	#[2007-05-08]Yes, better have those gmp_PS_INCLUDE_SUBDIRS appear before there parent dirs,
	#so that "platform-specific" header overrides the "general" header(if they have the same name).
	#[2008-07-29] gmp_ud_list_PS_HEADER_PARENT and gmp_PS_INCLUDE_SUBDIRS are no longer suggested,
	#because I've realized a more universal idea dealing with that "PS" thing using gmpf_CombinePsSubdirs.

_gmp_C_CXX_FLAGS_ALL += $(gmp_CFLAGS_CODE_GEN_ALL) $(gmp_CFLAGS_NON_CODE_GEN)

gmp_CFLAGS_CODE_GEN_ALL += $(gmp_CFLAGS_CODE_GEN) $(gmp_CXXFLAGS_CODE_GEN) $(gmp_CFLAGS_MACRO_DEFS)


gmp_C_CXX_ALL_preset += $(gmp_CFLAGS_CODE_GEN_ALL_preset) $(gmp_CFLAGS_NON_CODE_GEN_preset)

gmp_CFLAGS_CODE_GEN_ALL_preset += $(gmp_CFLAGS_CODE_GEN_preset) $(gmp_CXXFLAGS_CODE_GEN_preset) \
  $(gmp_CFLAGS_MACRO_DEFS_preset) $(gmp_CFLAGS_INCLUDES_preset)

gmp_CFLAGS_CODE_GEN_preset += $(gmp_CFLAGS_INCLUDES)
	#[2008-11-29] added, when building gtktetris example.


_gmp_CFLAGS_final = $(if $(strip $(_gmp_C_CXX_FLAGS_ALL)),$(_gmp_C_CXX_FLAGS_ALL),$(gmp_C_CXX_ALL_preset))

_gmp_LINKFLAGS_final = $(if $(strip $(gmp_LINKFLAGS)),$(gmp_LINKFLAGS),$(gmp_LINKFLAGS_preset))
	#[2007-11-16] Actually, the special process for [empty _gmp_C_CXX_FLAGS_ALL & empty gmp_LINKFLAGS]
	#is here for old GMU makefiles(v0.92 and prior) compatibility. New GMU makefiles should always
	#have _gmp_C_CXX_FLAGS_ALL & gmp_LINKFLAGS non-null.
