ifndef __cenv_linuxgcc_gcc4.8_i686_env_included_
__cenv_linuxgcc_gcc4.8_i686_env_included_ := 1

# For i686-linux targeted gcc 4.8 compiler 

# Naming requirement:
# GMU compiler-id  <cid> = linuxgcc
# GMU compiler-ver <cver>= gcc4.8_i686
# 
# This file takes one input from env-var:
#
#	gmp_CENV_ROOT_linuxgcc_gcc4_8_i686    # which is gmp_CENV_ROOT_<cid>_<cver>
#
# This file's outputs things:
#
# First, a make-var, used on making subprj, refname_MakeVarDefines= 
#	gmpf_LoadCenv_linuxgcc_gcc4.8_i686    # which is gmpf_LoadCenv_<cid>_<cver>
#
#	gmpf_ExportCenv_linuxgcc_gcc4_8_i686  # which is gmpf_ExportCenv_<cid>_<cver>
#
# And, for the env-var name cases, "dot" is replaced with "underscore", 4.8 becomes 4_8
# because dot is invalid in env-var name.
#
# Note: the naming of the above two is a misnomer, it better says gmp_ instead of gmpf_ ,
# because gmpf_ implies a make-function.

ifeq (,$(gmp_CENV_ROOT_linuxgcc_gcc4_8_i686))
  $(error !GMP!Error: gmp_CENV_ROOT_linuxgcc_gcc4_8_i686 is not defined, so I cannot find gcc4.8_i686 compiler)
endif

_linuxgcc_gcc4_8_i686_val_PATH = $1/bin;$(subst \,/,$(PATH))

in_gmpf_LoadCenv_linuxgcc_gcc4.8_i686 = \
	gmp_COMPILER_VER_linuxgcc=gcc4.8_i686 \
	gmp_GCC_PREFIX=i686-pc-linux-gnu- \
	PATH="$(_linuxgcc_gcc4_8_i686_val_PATH)"

gmpf_LoadCenv_linuxgcc_gcc4.8_i686 = $(call in_gmpf_LoadCenv_linuxgcc_gcc4.8_i686,$(gmp_CENV_ROOT_linuxgcc_gcc4_8_i686))
	# Because this is just GNU make-var, not env-var, we can use dot inside make-var name.

define def_ExportCenv_linuxgcc_gcc4.8_i686
  $(call gmuf_AnounceExportEnvvar,gmp_COMPILER_VER_linuxgcc := gcc4.8_i686)
  $(call gmuf_AnounceExportEnvvar,gmp_GCC_PREFIX := i686-pc-linux-gnu-)
  $(call gmuf_AnounceExportEnvvar,PATH := $(_linuxgcc_gcc4_8_i686_val_PATH))
endef

gmpf_ExportCenv_linuxgcc_gcc4_8_i686 = $(eval $(call def_ExportCenv_linuxgcc_gcc4.8_i686,$(gmp_CENV_ROOT_linuxgcc_gcc4_8_i686)))


endif
