# This script should not be executed alone, it is source-d by umake etc.

if [ "$gmu_MAKE_EXE" = "" ]; then
  gmu_MAKE_EXE=make
fi

tmpbatdir=$(\cd `dirname ${BASH_SOURCE}` && pwd)
export gmu_DIR_ROOT=${tmpbatdir%/GMU-main/umake_cmd/bashcmd}

PATH=$tmpbatdir:$PATH

# If there is sign that GMU is not "installed", do the install automatically.
if [ ! -f $tmpbatdir/gmuCountChar ]; then
	echo "First time run umake? GMU is now installing for you... "
	if ! $gmu_DIR_ROOT/install.sh ;then
		echo "Sorry, GMU install fails. umake cannot run."
		exit 1
	fi
fi


source $gmu_DIR_ROOT/_gmuenv.sc


rm -f _MainPrjBuildStart.gmu.ckt
if [ $? != 0 ]; then
  echo "Error from $0: Cannot delete GnumakeUniproc start-up signature file(_MainPrjBuildStart.gmu.ckt) in current dir. GnumakeUniproc will not work."
  exit
fi

# A special processing since GnumakeUniproc v0.98. Prefer Makefile.umk as default makefile than Makefile.
# If there exists Makefile.umk, I'll pass ``-f Makefile.umk`` to make executable, unless user explicitly assign ``-f xxx``.
# * If user provides -f xxx in command parameter, I'll pass those parameter to make .
# * If user does not provide -f xxx, I'll call make with all user's parameter as well as appending -f Makefile.umk as make's extra parameters.
if [ -f Makefile.umk ]; then
	_F_Makefile="-f Makefile.umk"
	for p in "$@"; do
		if [ $p = "-f" ]; then _F_Makefile= ; fi
	done
fi

if [ "$gmu_LOG_OUTPUT_FILENAME" != "" ]; then

	gmu_LOG_OUTPUT_FILENAME_bak="${gmu_LOG_OUTPUT_FILENAME}.bak"

	if [ -e "$gmu_LOG_OUTPUT_FILENAME_bak" ]; then rm -f "$gmu_LOG_OUTPUT_FILENAME_bak"; fi
	if [ $? != 0 ]; then
	  echo "Error from $0: Cannot delete backup log-file($gmu_LOG_OUTPUT_FILENAME_bak) ."
	  exit
	fi

	if [ -e "$gmu_LOG_OUTPUT_FILENAME" ]; then mv "$gmu_LOG_OUTPUT_FILENAME" "$gmu_LOG_OUTPUT_FILENAME_bak"; fi
	if [ $? != 0 ]; then
	  echo "Error from $0: Cannot rename $gmu_LOG_OUTPUT_FILENAME to $gmu_LOG_OUTPUT_FILENAME_bak ."
	  exit
	fi

	$gmu_MAKE_EXE $_F_Makefile $GMU_FORCE_BASH "$@" 2>&1 | tee $gmu_LOG_OUTPUT_FILENAME

else
  $gmu_MAKE_EXE $_F_Makefile $GMU_FORCE_BASH "$@"
fi
