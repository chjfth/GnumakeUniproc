
_THIS_COMPILER_ID := wince
	# Although this common name, this file actually deals with the WinCE ARM
	# compiler provided by Microsoft Visual Studio 2005 .

ifneq ($(gmp_COMPILER_ID),$(_THIS_COMPILER_ID))
  $(error !You have set a gmp_COMPILER_ID other than "$(_THIS_COMPILER_ID)")
endif
#gmp_COMPILER_VER = # Do not define it, leave it to the user
gmp_G_COMPILER_ID_VER = $(gmp_COMPILER_ID)$(gmp_COMPILER_VER_wince)

_gmp_COMPILER_VER_ = $(gmp_COMPILER_VER_$(gmp_COMPILER_ID))

_msvc_vc80ver := $(filter vc80%,$(_gmp_COMPILER_VER_))
_msvc_IsUsing_vc80 := $(if $(_msvc_vc80ver),1,)

_msvc_vc90ver := $(filter vc90%,$(_gmp_COMPILER_VER_))
_msvc_IsUsing_vc90 := $(if $(_msvc_vc90ver),1,)

_msvc_CompilerVers := $(strip $(_msvc_vc80ver) $(_msvc_vc90ver))

# Here, check whether _gmp_COMPILER_VER_ results in a non-empty but unrecognized compiler-ver.
ifneq (,$(_gmp_COMPILER_VER_))
  ifeq (,$(_msvc_CompilerVers))
    $(warning !GMP!Warning: Your gmp_COMPILER_VER_$(gmp_COMPILER_ID) has value "$(_gmp_COMPILER_VER_)", which contains no recognized version for MSVC(wince) compiler)
  endif
endif

ifeq (,$(strip $(_msvc_CompilerVers)))
  # Set the default:
  _msvc_CompilerVerUse = vc80
else
  ifneq (1,$(call _IsAllWordsSame,$(_msvc_CompilerVers)))
    $(error !GMP!Error: Multiple MSVC(wince) compiler versions are defined: gmp_COMPILER_VER_$(gmp_COMPILER_ID)=$(_gmp_COMPILER_VER_), _msvc_CompilerVers=$(_msvc_CompilerVers))
  endif
  _msvc_CompilerVerUse = $(firstword $(_msvc_CompilerVers))

  #[2008-08-14] gmp_G_CompilerVerToDeco must be defined for a compiler-config-mki if input
  #gmp_COMPILER_VER_wince matches one of the predefined compiler-ver strings.
  gmp_G_CompilerVerToDeco := _$(_msvc_CompilerVerUse)
  gmp_G_CompilerVerValid  :=  $(_msvc_CompilerVerUse)
endif


_gmp_isAboveVC80 = $(if $(_msvc_vc90ver)$(_msvc_vc80ver),1)
_gmp_isAboveVC90 = $(if $(_msvc_vc90ver),1)



gmu_extn_OBJ = obj

gmp_extn_LIB = lib
gmp_extn_DLL = dll
gmp_extn_EXE = exe

gmpf_MakeLibName = $(patsubst %,%.$(gmp_extn_LIB),$1)
gmpf_MakeExeName = $(patsubst %,%.$(gmp_extn_EXE),$1)
gmpf_MakeDllName = $(patsubst %,%.$(gmp_extn_DLL),$1)
gmpf_MakeDllNameForLink = $(gmpf_MakeLibName)

gmpf_MakeUpSysLibsToLink = $(addsuffix .$(gmp_extn_LIB),$1)

gmu_u_GCC_M_OPTIONS_preset += $(addprefix -D,_WIN32_WCE=0x420 WINCE UNDER_CE ARM _ARM_) 
	# To try!
gmu_u_GCC_M_OPTIONS += $(gmu_u_GCC_M_OPTIONS_preset) #temp decision

INCLUDE += $(Include) $(include)

LIB += $(Lib) $(lib)
# [2007-01-20] About $(INCLUDE) and $(Include), $(LIB) and $(Lib):
#	In Microsoft Platform SDK for Windows Server 2003 SP1(year 2005), those Build Environment
# bat files set env-var Include and Lib instead of traditionally used INCLUDE and LIB. 
# Since GNUmake is varname-case-sensitive, checking only `INCLUDE' will miss `Include', 
# therefore, I think combining them into INCLUDE is a good way to solve this.

_msvc_env_vars = $(filter INCLUDE LIB VSINSTALLDIR VCINSTALLDIR VCCEDIR,$(call gmuf_ToCapital,$(.VARIABLES)))

# Check whether the env-vars for running Visual C++ command line compiler are OK.
ifeq '' '$(filter INCLUDE,$(_msvc_env_vars))'
  $(error !Env-var `INCLUDE' not defined! Please setup the Visual C++ compiler environment first)
    #[2007-03-11] On a WinXP with VC6 installed, exeuting VCVARS32.BAT cause env-var `include' to appear instead of `INCLUDE', strange!
endif
ifeq '' '$(filter LIB,$(_msvc_env_vars))'
  $(error !Env-var `LIB' not defined! Please setup the Visual C++ compiler environment first)
endif
ifeq '' '$(filter VSINSTALLDIR,$(_msvc_env_vars))'
  $(error `VSINSTALLDIR' is not defined! Please setup the Visual C++ compiler environment first)
    #[2007-03-11] VS2005 sets env-var VCINSTALLDIR, not MSVCDir.
endif

ifeq '' '$(filter VCCEDIR,$(_msvc_env_vars))'
  $(error !VCCeDir is not defined! Please setup the Visual C++ ARM compiler environment first)
endif


# This INCLUDE variable used by VC++ contains include-dirs separated by semicolons,
#therefore, we have to change all semicolons to spaces. And, since user's VC++ direcotories
#may have spaces in it, we prepare _gmu_isystem_DIRS_WRAP_QUOTES here instead of gmu_ud_list_SYS_HEADER .

_INCLUDE_HIDE_DIR_SPACE := $(subst $(_GmuSpace),@,$(subst \,/,$(strip $(INCLUDE))))
	# e.g.
	#	C:\my\inc;E:\vs 2005\inc;
	# turn into
	#	C:/my/inc;E:/vs@2005/inc;

_gmu_isystem_DIRS_WRAP_QUOTES := $(subst @, ,$(patsubst %,-isystem '%',$(subst ;, ,$(_INCLUDE_HIDE_DIR_SPACE))))
	# e.g (result)
	#	-I 'C:/my/inc' -I 'E:/vs 2005/inc'

gmu_ud_list_SYS_HEADER += 


gmu_exe_CC = cl
gmu_exe_CXX = cl
gmu_exe_LINK = link
gmu_exe_LIB = lib


# Category(chr): MBCS or Unicode
cfc_chr_Mbcs_defs = /D_MBCS
cfc_chr_Unicode_defs = /DUNICODE /D_UNICODE
	#[2008-09-03]GMU author note: cfc_chr_Mbcs_defs is used in mm_snprintf's makefile.

