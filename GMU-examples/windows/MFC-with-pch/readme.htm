<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>MFC-with-pch example readme</title>

<style type="text/css">
.fws {
    border: #777777 1px solid;
    padding: 0.5em;
    margin-left: 0em;
    margin-right: 0em;
    background-color: #e6e6e6;
}

H1 {
	font-family: Verdana, Arial, sans-serif; 
}
H2 {
	color: #000066;
	font-family: Verdana, Arial, sans-serif; 
}
H3 {
	font-family: Verdana, Arial, sans-serif; 
	color: #6600dd;
	font-size: 120%
}
H4 {
	color: #660000;
	font-family: Verdana, Arial, sans-serif; 
}

.hint {
	font-size: 90%;
    border: #777777 1px solid;
    padding: 0.5em;
    margin-left: 2em;
    margin-right: 2em;
}

.footnoteb {
    border: #777777 1px solid;
	color: #404040;
	font-size: 90%;
    padding: 0.5em;
    margin-left: 2em;
    margin-right: 2em;
}

.c-comment { color:#009900; }
.c-string { color:#990099; }

</style>
</head>

<body>
<H1 align="center">MFC-with-pch example readme</H1>

<p>[2012-08-10] Updated for GnumakeUniproc v0.99</p>

<H2>Summary</H2>
<p>The example demonstrates the following things by building an MFC program:</p>
<ul>
  <li>Using plugins. Two plugins are used in this example:
    <ul>
      <li>PI_winres_msvc: Compile a Windows resource script(.rc) into binary resource(.res).</li>
      <li>PI_use_pch_msvc: Use compiler option /Yc to generate a precompiled header(pch) then compile C++ files by utilizing that pch file(compiler option /Yu).</li>
    </ul>
  </li>
  <li>User can use any filename extension for C/C++ source files(through GMU var <code>gmu_u_list_CXX_EXTN</code>).</li>
</ul>
<p>NOTE: These two plugins can only be used with MSVC compiler, since they use MSVC compiler specific commands and options. If you'd like to use other compilers, such as MinGW or Borland C++, you should use dedicated plugins for those compilers. </p>
<p>TIP: For using a specific GMU plugin, see the plugin make-partial-files(.mki) to see if they contain description for themselves. </p>
<p>The MFC example program is just a skeleton program generated by Visual C++ 6 MFC appwizard(with program name <code>MFC1</code> ), plus three modifications:</p>
<ol>
  <li>MFC1.cpp is renamed to MFC1.cxx to demonstrate the use of <code>gmu_u_list_CXX_EXTN</code> .</li>
  <li>Add an extra source file named <tt>NotUsingPch.cpp</tt> . This file, unlike other appwizard generated cpp files, does not include &quot;StdAfx.h&quot;, so as to demonstrate the alternative of excluding some source files from using precompiled headers. </li>
  <li>No <code>StdAfx.cpp</code>. You do not have to create such file  yourself, since it is always an almost empty file containing only one line which says <code>#including &quot;StdAfx.h&quot;</code>. The make-code from PI_use_pch_msvc  will create it for you in project output directory. The <code>StdAfx.cpp</code> there is just for use with MSVC6 's .dsp project. </li>
</ol>
<h2>Special description for PI_use_pch_msvc</h2>
<p>These PI_use_pch_msvc defined make-vars are used in this example:</p>
<ul>
  <li>gmi_up_HEADER_FOR_PCH_FROM_ROOT</li>
  <li>    gmi_up_list_SRC_DONT_DEPPCH_FROM_ROOT</li>
</ul>
<h3>The default behavior of this example </h3>
<p>Makefile(Makefile.umk) key statements as follows: </p>
<pre class="fws">gmu_u_list_CXX_EXTN = cxx cpp <span class="c-comment"># a deliberate cxx for test
	# Since cxx is listed first, so this plugin will create a file named
	# StdAfx.h.cxx instead of StdAfx.h.cpp .</span>

gmu_uf_LINK_OUTPUT = $(call gmpf_MakeExeName,MFC-with-pch)

gmu_ud_SRC_ROOT = .

gmu_up_list_SRC_FROM_ROOT += $(gmi_PCHVC_up_list_SRC_DONT_DEPPCH_FROM_ROOT) \
	MainFrm.cpp MFC1.cxx MFC1Doc.cpp MFC1View.cpp

<span class="c-comment"># PI_use_pch_msvc vars:</span>
gmi_PCHVC_up_HEADER_FOR_PCH_FROM_ROOT = StdAfx.h <span class="c-comment"># a header file that is used for precompiling</span>
gmi_PCHVC_up_list_SRC_DONT_DEPPCH_FROM_ROOT = NotUsingPch.cpp

<span class="c-comment"># PI_winres_msvc vars:</span>
gmi_RCVC_up_list_WINRC_FROM_ROOT = MFC1.rc

gmp_CFLAGS_CODE_GEN_ALL +=
  gmp_CFLAGS_MACRO_DEFS += $(gmp_CFLAGS_MACRO_DEFS_preset) <b>-D_WINDOWS -D_AFXDLL</b>
  gmp_CFLAGS_CODE_GEN += $(gmp_CFLAGS_CODE_GEN_preset)

gmp_CFLAGS_NON_CODE_GEN += $(gmp_CFLAGS_NON_CODE_GEN_preset)

<span class="c-comment"># ... Remainder the same as template.</span></pre>
<p>The default u_srccfg_post.mki provided in this example does not define <code>gmi_up_list_SRC_DEPPCH_FROM_ROOT</code>, but define <code>gmi_up_list_SRC_DONT_DEPPCH_FROM_ROOT=NotUsingPch.cpp</code> . That means all source files(those listed in <code>gmu_up_list_SRC_FROM_ROOT</code>) will all use precompiled headers(compile with <code>/Yu</code> option) except <tt>NotUsingPch.cpp</tt>. The build output is as follows:</p>
<pre class="fws">
GnumakeUniproc started (GNUmake v3.82).
gmu_ud_OUTPUT_ROOT(%) = ./gf
 GenHdepend for precompiled-header from: ./StdAfx.h
 Precompiling ./StdAfx.h  to %/MFC-with-pch_msvc_vc60/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.pch ...
cl   /GR /EHsc  /O2 /Zi /MD     /DWIN32  /D_MBCS /DNDEBUG -D_WINDOWS -D_AFXDLL  /nologo /c /Yc"D:/GMU/GMU
-examples/windows/MFC-with-pch/StdAfx.h" /Fp"D:/GMU/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pch_msv
c_vc60/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.pch" /Fo"D:/GMU/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pc
h_msvc_vc60/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.pch.obj" /Fd"D:/GMU/GMU-examples/windows/MFC-with-pch/gf/MF
C-with-pch_msvc_vc60/MFC-with-pch.pdb" D:/GMU/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60
/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.cxx
StdAfx.h.cxx
 GenHdepend: (MFC1.cxx.d)
 [cl] MFC1.cxx
cl /c   /GR /EHsc  /O2 /Zi /MD     /DWIN32  /D_MBCS /DNDEBUG -D_WINDOWS -D_AFXDLL /nologo /Fd"D:/GMU/GMU-
examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/MFC-with-pch.pdb" /Yu"StdAfx.h" /Fp"D:/GMU/GMU-ex
amples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.pch"   /Fo"D:/GMU
/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_obj/MFC1.cxx.obj" MFC1.cxx
MFC1.cxx
 GenHdepend: (NotUsingPch.cpp.d)
 [cl] NotUsingPch.cpp
cl /c   /GR /EHsc  /O2 /Zi /MD     /DWIN32  /D_MBCS /DNDEBUG -D_WINDOWS -D_AFXDLL /nologo /Fd"D:/GMU/GMU-
examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/MFC-with-pch.pdb"   /Fo"D:/GMU/GMU-examples/windo
ws/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_obj/NotUsingPch.cpp.obj" NotUsingPch.cpp
NotUsingPch.cpp
 GenHdepend: (MainFrm.cpp.d)
 [cl] MainFrm.cpp
cl /c   /GR /EHsc  /O2 /Zi /MD     /DWIN32  /D_MBCS /DNDEBUG -D_WINDOWS -D_AFXDLL /nologo /Fd"D:/GMU/GMU-
examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/MFC-with-pch.pdb" /Yu"StdAfx.h" /Fp"D:/GMU/GMU-ex
amples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.pch"   /Fo"D:/GMU
/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_obj/MainFrm.cpp.obj" MainFrm.cpp
MainFrm.cpp
 GenHdepend: (MFC1Doc.cpp.d)
 [cl] MFC1Doc.cpp
cl /c   /GR /EHsc  /O2 /Zi /MD     /DWIN32  /D_MBCS /DNDEBUG -D_WINDOWS -D_AFXDLL /nologo /Fd"D:/GMU/GMU-
examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/MFC-with-pch.pdb" /Yu"StdAfx.h" /Fp"D:/GMU/GMU-ex
amples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.pch"   /Fo"D:/GMU
/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_obj/MFC1Doc.cpp.obj" MFC1Doc.cpp
MFC1Doc.cpp
 GenHdepend: (MFC1View.cpp.d)
 [cl] MFC1View.cpp
cl /c   /GR /EHsc  /O2 /Zi /MD     /DWIN32  /D_MBCS /DNDEBUG -D_WINDOWS -D_AFXDLL /nologo /Fd"D:/GMU/GMU-
examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/MFC-with-pch.pdb" /Yu"StdAfx.h" /Fp"D:/GMU/GMU-ex
amples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_gmu_tmp/PI_use_pch_msvc/StdAfx.h.pch"   /Fo"D:/GMU
/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_obj/MFC1View.cpp.obj" MFC1View.cpp
MFC1View.cpp
 GenHdepend for Windows resource script: MFC1.rc
 RC compiling: MFC1.rc
rc /fo"D:/GMU/GMU-examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_obj/MFC1.res"  MFC1.rc
***** Linking(EXE_GUI): %/MFC-with-pch_msvc_vc60/MFC-with-pch.exe ...
[DONE:] %/MFC-with-pch_msvc_vc60/MFC-with-pch.exe
[[[END]]]                                        Projects:1,Containers:0+0
Files compiled: C++:5 C:0 ASM:0 linked:1
Custom action count:
    MSVC-PCH-generated: 1
    MSVC-RC-compiled: 1
</pre>
<p>From the output, you can see that /Yu compiler option is not used when compiling <tt>NotUsingPch.cpp</tt>.</p>
<p>By the way, if you want to ask why <tt>MFC1.cxx</tt> is compiled prior to <tt>NotUsingPch.cpp</tt>, I can tell you that's because you list <code>cxx</code> prior to <code>cpp</code> in <code>gmu_u_list_CXX_EXTN</code>, which causes all cxx files are compiled before all cpp files. </p>
<h3>You can force any files not to use pch </h3>
<p>Now, let's try moving <tt>MFC1View.cpp</tt> into <code>gmi_up_list_SRC_DONT_DEPPCH_FROM_ROOT</code>, thus the u_srccfg_post.mki looks like this:</p>
<pre class="fws">gmu_up_list_SRC_FROM_ROOT += $(gmi_PCHVC_up_list_SRC_DONT_DEPPCH_FROM_ROOT) \
	MainFrm.cpp MFC1.cxx MFC1Doc.cpp

<span class="c-comment"># PI_use_pch_msvc vars:</span>
gmi_up_HEADER_FOR_PCH_FROM_ROOT = StdAfx.h
gmi_up_list_SRC_DONT_DEPPCH_FROM_ROOT = NotUsingPch.cpp <b>MFC1View.cpp</b> 
</pre>
<p>This time  you can see in this build output(remember to clean the output in the previous build first):  </p>
<pre class="fws"> [cl] MFC1View.cpp
cl /c   /GR /EHsc  /O2 /Zi /MD     /DWIN32  /D_MBCS /DNDEBUG -D_WINDOWS -D_AFXDLL /nologo /Fd"D:/GMU/GMU-
examples/windows/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/MFC-with-pch.pdb"   /Fo"D:/GMU/GMU-examples/windo
ws/MFC-with-pch/gf/MFC-with-pch_msvc_vc60/_obj/MFC1View.cpp.obj" MFC1View.cpp
</pre>
<p>You can notice that <tt>MFC1View.cpp</tt> is not longer compiled with <code>/Yu</code>. </p>
<p>To accomplish the same build process(not using pch for MFC1View.cpp), you can also use <code>gmi_up_list_SRC_DEPPCH_FROM_ROOT</code> instead of <code>gmi_up_list_SRC_DONT_DEPPCH_FROM_ROOT</code>. The u_srccfg_post.mki(partial) now appears as: </p>
<pre class="fws">
gmu_up_list_SRC_FROM_ROOT += NotUsingPch.cpp MFC1View.cpp \
	$(<b>gmi_up_list_SRC_DEPPCH_FROM_ROOT</b>)

<span class="c-comment"># PI_winres_msvc vars:</span>
gmi_up_list_WINRC_FROM_ROOT = MFC1.rc

<span class="c-comment"># PI_use_pch_msvc vars:</span>
gmi_up_HEADER_FOR_PCH_FROM_ROOT = StdAfx.h
<b>gmi_up_list_SRC_DEPPCH_FROM_ROOT</b> = MainFrm.cpp MFC1.cxx MFC1Doc.cpp
</pre>
<p>--</p>
</body>

</html>
