
define _DO_WINRC_COMPILE
	@$(call _MkdirIfNotExist,$(@D))
	@echo " RC compiling: $<"
	@$(gmu_shcmd_DO_SHOW_PREREQ_DEFAULT)
	rc /fo"$@" $(gmi_RCVC_RC_FLAGS) /d gmp_COMPILER_CIDVER=$(gmp_COMPILER_VER_$(gmp_COMPILER_ID)) $<
	$(call gmpf_AddCustomActionCount,MSVC-RC-compiled)
endef
	# Memo: Yes, MSDN 2008 tells us to use /d xxx instead of /D xxx to define a macro.

$(_RCVC_REQRES_TO_LINK): _p_ts_HDepend = $(@:.res=.$(_RCVC_RCdotD_extn))# `ts' means target specific variable

$(_RCVC_REQRES_TO_LINK): $(gmu_Gd_OBJ_OUTPUT)/%.res: $(_gmu_ud_SRC_ROOT)/%.rc
ifeq (,$(_gmp_isAboveVC100))
  # GenHDepend for .rc is only supported prior to VS2010.
  # VS2010 starts using UTF-16LE encoding for afxres.rc, and mingw gcc 3.2 cannot cope with that encoding.
  ifneq (,$(gmu_DO_SHOW_GENHDEPEND_CMD))
	$(_GEN_HDEPEND_FOR_WINRC)
  else
	@$(_GEN_HDEPEND_FOR_WINRC)
  endif
else
	@echo "NOTE: MinGW gcc cannot generate .d for VS2010+ .rc files because afxres.rc etc are UTF-16 encoded."
	@$(call _MkdirIfNotExist,$(@D))
	@touch $(_p_ts_HDepend)
endif
ifneq (,$(gmu_DO_SHOW_COMPILE_CMD))
	$(_DO_WINRC_COMPILE)
else
	@$(_DO_WINRC_COMPILE)
endif

_temp :=
	# [2006-12-01] This prevents the following "# NOTE! Only when ..." line 
	#from being taken as a command to the above rule.

############################################################################
############################################################################
ifndef gmi_RCVC_DONT_WANT_AUTO_RC_HDEP
	# NOTE! This var suppress .res auto-hdepend generation.

ifeq (,$(gmu_NO_GEN_HDEPEND))

  #include the .h header depend(.d) files for all the .rc files
  -include $(_RCVC_p_HDEPEND_FOR_WINRC)

  ifeq (,$(gmi_RCVC_DEFEND_C_MACRO_GCC_M_RC))
	gmi_RCVC_DEFEND_C_MACRO_GCC_M_RC = _GMI_RCVC_GEN_HDEP_FOR_PC
  endif
  _res_d_CFLAGS = -x c -D$(gmi_RCVC_DEFEND_C_MACRO_GCC_M_RC)
	#	The option "-x c" tells gcc to consider XXX.rc as a C source file,
	# otherwise, gcc will think of XXX.rc as a link component, and complain:
	#-------
	#   gcc: colors2.rc: linker input file unused because linking not done
	#-------
	#	About the C macro $(gmi_RCVC_DEFEND_C_MACRO_GCC_M_RC):
	#	We use `gcc -M' to generate hdepend files for our .rc files, and if you
	# find something in a .rc file cause `gcc -M' to fail(called rc-special statements
	# below), then you should use a special macro in .rc files
	# to protect those rc-special statements from being seen by
	# `gcc -M'. That special macro is named by $(gmi_RCVC_DEFEND_C_MACRO_GCC_M_RC).
	#
	# So, an .rc file may look like this:
#	-----------------
#	#include "resource.h"
#	#include "afxres.h"
#	
#	#ifndef _GMI_GEN_HDEP_FOR_PC
#	// rc-special statements here...
#	#endif // #ifndef _GMI_GEN_HDEP_FOR_PC
#	-----------------
	# By the way, the usual Resource-Definition Statements still make `gcc -M'
	# happy to process, -- at least in the case of gcc 3.2 .

  define _GEN_HDEPEND_FOR_WINRC # $@ is XXX.res
	@echo " GenHdepend for Windows resource script: $< "
	@$(gmu_shcmd_DO_SHOW_PREREQ_DEFAULT)
	@$(call _MkdirIfNotExist,$(@D))
	$(_gmu_GCC_M_PREFIX)gcc $(_GCC_GEN_HDEPEND_OPTION) $(_res_d_CFLAGS) -MT "$@" $< > $(_p_ts_HDepend)_
	@$(MV_) $(_p_ts_HDepend)_ $(_p_ts_HDepend)
  endef

endif # ifneq (,$(gmu_NO_GEN_HDEPEND))

endif #ifndef gmi_RCVC_DONT_WANT_AUTO_RC_HDEP
############################################################################
############################################################################
