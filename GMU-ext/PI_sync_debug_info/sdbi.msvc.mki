
# Sync pdb(program database) files for MSVC compiler.

# We do this by assigning(appending) target-specific var for gmi_SYDO_target_SyncOutput .
# Target-specific vars are expanded when that target is made, so we're free to use
# make-vars define later than this mki.

# Input for this plugin: 
# gmp_MSVC_Gp_LINK_OUTPUT_pdb
	# (file list with full path)
	# If this var is defined, these files are considered as debug info files.

# gmp_MSVC_Gp_VCx0_pdb
	# (file list with full path)
	# If gmp_MSVC_Gp_LINK_OUTPUT_pdb is null and this var is defined, these files are considered as debug info files.

sdbi_pdbLibOutput =	$(gmp_MSVC_Gp_VCx0_pdb) \
 $(if $(wildcard $(gmp_MSVC_Gp_VCx0_idb)),$(gmp_MSVC_Gp_VCx0_idb))

#sdbi_pdbExeOutput = $(call gmuf_ChangeFilenameExt,$(gmu_Gp_LINK_OUTPUT),pdb) // old before 2009-05-12
sdbi_pdbExeOutput = $(gmp_MSVC_Gp_LINK_OUTPUT_pdb)

#sdbi_isExeOutput = $(if $(wildcard $(sdbi_pdbExeOutput)),1)
	# note: Don't use $(wildcard ) here due to make 3.81's perhaps buggy caching behavior. Ref: http://savannah.gnu.org/bugs/?21231
sdbi_isExeOutput = $(if $(call gmuf_IsFileExist_sh,$(sdbi_pdbExeOutput)),1)

gmi_SDBI_Gps_DBG_FILE = $(if $(sdbi_isExeOutput),$(sdbi_pdbExeOutput),$(sdbi_pdbLibOutput))
	# The first check is for EXE or DLL output, and if not I think that is a LIB output
	#
	# Example: A project outputs foo.exe, then the corresponding pdb is foo.pdb.
	# Copying foo.pdb is enough, don't copy the VCx0.pdb since the info in VCx0.pdb
	# has been merged into foo.pdb when generting an EXE/DLL. 
	# But if you're linking a static LIB(bar.lib for example), then no bar.pdb is
	# generated when linking the lib, so the VCx0.pdb is the one you should keep.
	#
	# Sometimes, VCx0.idb is generated with VCx0.idb when linking a LIB(I don't
	# know why), so copy that idb as well.


gmi_SYDO_up_list_SYNC_DBGINFO += $(gmi_SDBI_Gps_DBG_FILE)

