ifndef __PLUGIN_MAKESDK_2016_LOADED
__PLUGIN_MAKESDK_2016_LOADED = 1
ifeq (,$(_isNowGmuGetPrjAttr))

_pluginId_makesdk_2016 := $(gmpv_ThisPluginId)
	# Plugin ID abbreviation: MSDK

# This plugin requires python 2.7

# User input vars:

# gmi_MSDK_ud_SELF_DOTH_FROM_REPO= (optional)
#	Directory of offering interface headers(.h), relative to this-repo-root.
#	This option is required for the magical .h PDB-sewing to work for your SDK users.
#	User normally set this in their make-sdk Makefile, like gmi_MSDK_ud_SELF_DOTH_FROM_REPO=libsrc/include .

# gmi_MSDK_ud_USING_DOTH_FROM_SDKIN= (optional, has default, normally user should not override it)
#	Directory of SDKIN's interface headers(.h), relative to SDKIN's directory.
#	This option is required for the magical .h PDB-sewing to work when using other's SDK(sdkin).


# Further, this plugin takes following env-vars as input:
# gmb_buildsdk_ini=
# gmb_compiler_ids=
# gmb_builds=
# gmb_builds_<compiler-id>=
# gmb_<compiler-id>_vers=
# gmb_thisrepo=        # (must) directory of your SDK's source tree, must be an svn sandbox
# gmb_dirname_sdkin =  # (optional) directory name to store your code's "input SDK"
# gmb_dirname_sdkout = # (with default) directory name to store your code's "output SDK"
#
# gmb_run_on_compiler_id = # (optional) used in __Makefile-vbuxm
#
# This mki will set: gmb_syncto=$(gmb_thisrepo)/$(gmb_dirname_sdkout)

ifeq (,$(strip $(gmb_buildsdk_ini)))
  $(error Error from $(_pluginId_makesdk_2016): gmb_buildsdk_ini is not defined. I need an INI config-file to work with)
endif
gmi_MSDK_up_BUILDSDK_INI = $(gmb_buildsdk_ini)

ifeq (,$(strip $(gmb_thisrepo)))
  $(error Error from $(_pluginId_makesdk_2016): gmb_thisrepo is not defined, please set it to an svn sandbox directory)
endif
gmb_thisrepo := $(call gmuf_GetAbsPathByRela_soc,$(strip $(gmb_thisrepo)))
$(call gmuf_AnounceExportEnvvar,gmb_thisrepo=$(gmb_thisrepo))

$(call gmuf_AnounceExportEnvvar,gmb_dirname_sdkin=$(strip $(gmb_dirname_sdkin)))

ifeq (,$(gmb_dirname_sdkout))
  gmb_dirname_sdkout = sdkout
endif
$(call gmuf_AnounceExportEnvvar,gmb_dirname_sdkout=$(strip $(gmb_dirname_sdkout)))

gmb_syncto := $(call gmuf_GetAbsPathByRela_soc,$(gmb_thisrepo)/$(gmb_dirname_sdkout))
$(call gmuf_AnounceExportEnvvar,gmb_syncto=$(gmb_syncto))

$(call gmuf_AnounceExportEnvvar,gmb_run_example_on_compiler_vers=$(gmb_run_example_on_compiler_vers))

$(call gmuf_AnounceExportEnvvar,gmi_SYDO_SHOW_COPY_CMD=1)
$(call gmuf_AnounceExportEnvvar,gmp_RELEASE_WANT_DBG_SYMBOLS=1)



_tmp := $(shell $(call gmuf_ScriptCmd,\
	genmk-sdk.py --prjname=$(gmu_PRJ_NAME) --gmb_syncto=$(gmb_syncto) $(gmi_MSDK_up_BUILDSDK_INI) \
	) 2>&1 ) 
	# I have to use 2>&1 technique in order to know whether the $(shell cmd) executes successful.
	# But the bad side is: all \n from $(shell ) output is replaced with spaces which cause python stack traces hard to read.
ifneq (,$(strip $(_tmp)))
  $(info $(_tmp))
  $(call gmuf_OutputInfo_shechoe,Script genmk-sdk.py execution error. Reasons may be:\n\
    1. You do not have python 2.6 or other later 2.x installed.\n\
    2. Your configuration file $(gmi_MSDK_up_BUILDSDK_INI) contains errors.\n\
    3. The genmk-sdk.py python script contains bug.)
  $(error Error occurs in $(_pluginId_makesdk_2016), see error reason above)
endif


# >>> Plugin PI_sc_pdb_sew_svn related instructions (only for VC++ compiler)
gmp_u_list_PLUGIN_TO_LOAD += PI_sc_pdb_sew_svn
  gmi_SCPSS_ud_PDB = $(gmb_syncto)
  gmi_SCPSS_ud_source = $(gmb_thisrepo)
  gmi_SCPSS_PRODUCT_NAME = ScalaconSDK2016
  gmi_SCPSS_SYMSTORE_TARGET_DIR = $(gmb_thisrepo)/websymbols
  gmi_SCPSS_SYMSTORE_CLEAN_FIRST = 1
  gmi_SCPSS_SYMSTORE_3TIER = 1
  gmi_SCPSS_SVNHOST_TABLE = # use default
  gmi_SCPSS_list_REPOSIE_TABLE_SVNURL = # use default
  #
  gmi_SCPSS_PICK_CHERRIES = *
  ifneq (,$(strip $(gmb_dirname_sdkin)))
    gmi_SCPSS_PICK_SSTREAMS_DIR_FROM_INI = $(gmi_MSDK_up_BUILDSDK_INI)
    gmi_SCPSS_PICK_SSTREAMS_DIR_SDKIN = $(gmb_thisrepo)/$(gmb_dirname_sdkin)
  endif
  gmi_SCPSS_SAVE_SSTREAMS_DIR = !..
  gmi_SCPSS_SRC_MAPPING_FROM_INI=$(gmi_MSDK_up_BUILDSDK_INI),$(gmb_syncto),[global],examples_copyto,examples_dir

  ifneq (,$(strip $(gmi_MSDK_ud_SELF_DOTH_FROM_REPO)))
    gmi_SCPSS_SDKOUT_DOTH_LOCALROOT=$(if $(call gmuf_IsStringEqual,$(strip $(gmi_MSDK_ud_SELF_DOTH_FROM_REPO)),.),$(gmb_thisrepo),$(gmb_thisrepo)/$(gmi_MSDK_ud_SELF_DOTH_FROM_REPO))
  endif

  ifeq (,$(strip $(gmi_MSDK_ud_USING_DOTH_FROM_SDKIN)))
    gmi_MSDK_ud_USING_DOTH_FROM_SDKIN = include
      # set this as default because we always grab SDKIN binary packages to $(gmb_thisrepo)/$(gmb_dirname_sdkin)
      # which definitely has an "include" folder in it.
  endif
  gmi_SCPSS_SDKIN_DOTH_LOCALROOT=$(gmb_thisrepo)/$(gmb_dirname_sdkin)/$(strip $(gmi_MSDK_ud_USING_DOTH_FROM_SDKIN))

gmp_USER_POST_TARGETS += gmit_SCPSS_SEW_PDB
# <<< Plugin PI_sc_pdb_sew_svn related instructions 

gmp_USER_POST_TARGETS += Copy-cidver-mapping-ini



ifndef gmb_ignore_build_source
  gmu_uv_list_ALL_SUBPRJ += makesdk 
  makesdk_Makefile = __Makefile-mc
	# mc: multiple compiler build of lib source
endif

ifndef gmb_ignore_uxm
  gmu_uv_list_ALL_SUBPRJ += cpuxm
  cpuxm_Makefile = __Makefile-cpuxm
	# cpuxm: copy user examples

  gmu_uv_list_ALL_SUBPRJ += vbuxm
  vbuxm_Makefile = __Makefile-vbuxm
endif


_p_cidver_mapping_ini := $(gmb_thisrepo)/cidver-mapping.ini

.PHONY: Copy-cidver-mapping-ini
Copy-cidver-mapping-ini: 
	$(if wildcard $(_p_cidver_mapping_ini),$(CP_) $(_p_cidver_mapping_ini) $(gmb_syncto))




endif # ifeq (,$(_isNowGmuGetPrjAttr))
endif #__PLUGIN_MAKESDK_2016_LOADED
